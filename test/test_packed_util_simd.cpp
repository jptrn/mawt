#include <gtest/gtest.h>

#include <vector/packed/packed_util_simd.hpp>

#include <cstddef>
#include <cstdint>

#include <immintrin.h>

#include "util/simd_util.hpp"

TEST(Simd128, Scratch) {
    ASSERT_SIMD_EQ(_mm_setzero_si128(), _mm_setzero_si128());
    ASSERT_SIMD_EQ(_mm_set_epi32(0xFFCB2412, 0x11136436, 0x13136875, 0x99992312), _mm_set_epi32(0xFFCB2412, 0x11136436, 0x13136875, 0x99992312));
    ASSERT_SIMD_EQ(_mm_set_epi32(0xFFCB2412, 0, 0x13136875, 0x99992312), _mm_set_epi32(0xFFCB2412, 0, 0x13136875, 0x99992312));

    ASSERT_SIMD_EQ(
        _mm256_set_epi32(0xFFCB2412, 0, 0x13136875, 0x99992312, 0x24242424, 0x10101010, 0, 0x19152000), 
        _mm256_set_epi32(0xFFCB2412, 0, 0x13136875, 0x99992312, 0x24242424, 0x10101010, 0, 0x19152000)
    );

    ASSERT_SIMD_EQ(
        _mm512_set_epi32(0xFFCB2412, 0, 0x13136875, 0x99992312, 0x24242424, 0x10101010, 0, 0x19152000, 10, 245, 0x134162AB, 0xCCCCCCCC, 0x3040CCAB, 0x900241, 0, 120),
        _mm512_set_epi32(0xFFCB2412, 0, 0x13136875, 0x99992312, 0x24242424, 0x10101010, 0, 0x19152000, 10, 245, 0x134162AB, 0xCCCCCCCC, 0x3040CCAB, 0x900241, 0, 120)
    );
}

TEST(Simd128, Mask8) {
    __m128i val = _mm_set_epi8(0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10);
    ASSERT_SIMD_EQ(mask_8(val, 0),  _mm_set_epi8(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
    ASSERT_SIMD_EQ(mask_8(val, 1),  _mm_set_epi8(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10));
    ASSERT_SIMD_EQ(mask_8(val, 2),  _mm_set_epi8(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x10));
    ASSERT_SIMD_EQ(mask_8(val, 3),  _mm_set_epi8(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x81, 0x10));
    ASSERT_SIMD_EQ(mask_8(val, 4),  _mm_set_epi8(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x35, 0x84, 0x81, 0x10));
    ASSERT_SIMD_EQ(mask_8(val, 5),  _mm_set_epi8(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x35, 0x84, 0x81, 0x10));
    ASSERT_SIMD_EQ(mask_8(val, 6),  _mm_set_epi8(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10));
    ASSERT_SIMD_EQ(mask_8(val, 7),  _mm_set_epi8(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10));
    ASSERT_SIMD_EQ(mask_8(val, 8),  _mm_set_epi8(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10));
    ASSERT_SIMD_EQ(mask_8(val, 9),  _mm_set_epi8(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10));
    ASSERT_SIMD_EQ(mask_8(val, 10), _mm_set_epi8(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10));
    ASSERT_SIMD_EQ(mask_8(val, 11), _mm_set_epi8(0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10));
    ASSERT_SIMD_EQ(mask_8(val, 12), _mm_set_epi8(0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10));
    ASSERT_SIMD_EQ(mask_8(val, 13), _mm_set_epi8(0x00, 0x00, 0x00, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10));
    ASSERT_SIMD_EQ(mask_8(val, 14), _mm_set_epi8(0x00, 0x00, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10));
    ASSERT_SIMD_EQ(mask_8(val, 15), _mm_set_epi8(0x00, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10));
    for (size_t i = 16; i < 32; i++) {
        ASSERT_SIMD_EQ(mask_8(val, i), val);
    }
}

TEST(Simd128, MaskLo8) {
    __m128i val = _mm_set_epi8(0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10);
    ASSERT_SIMD_EQ(mask_lo_8(val, 0),  _mm_set_epi8(0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10));
    ASSERT_SIMD_EQ(mask_lo_8(val, 1),  _mm_set_epi8(0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x00));
    ASSERT_SIMD_EQ(mask_lo_8(val, 2),  _mm_set_epi8(0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x00, 0x00));
    ASSERT_SIMD_EQ(mask_lo_8(val, 3),  _mm_set_epi8(0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x00, 0x00, 0x00));
    ASSERT_SIMD_EQ(mask_lo_8(val, 4),  _mm_set_epi8(0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x00, 0x00, 0x00, 0x00));
    ASSERT_SIMD_EQ(mask_lo_8(val, 5),  _mm_set_epi8(0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00));
    ASSERT_SIMD_EQ(mask_lo_8(val, 6),  _mm_set_epi8(0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
    ASSERT_SIMD_EQ(mask_lo_8(val, 7),  _mm_set_epi8(0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
    ASSERT_SIMD_EQ(mask_lo_8(val, 8),  _mm_set_epi8(0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
    ASSERT_SIMD_EQ(mask_lo_8(val, 9),  _mm_set_epi8(0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
    ASSERT_SIMD_EQ(mask_lo_8(val, 10), _mm_set_epi8(0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
    ASSERT_SIMD_EQ(mask_lo_8(val, 11), _mm_set_epi8(0xFF, 0x32, 0x17, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
    ASSERT_SIMD_EQ(mask_lo_8(val, 12), _mm_set_epi8(0xFF, 0x32, 0x17, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
    ASSERT_SIMD_EQ(mask_lo_8(val, 13), _mm_set_epi8(0xFF, 0x32, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
    ASSERT_SIMD_EQ(mask_lo_8(val, 14), _mm_set_epi8(0xFF, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
    ASSERT_SIMD_EQ(mask_lo_8(val, 15), _mm_set_epi8(0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
    for (size_t i = 16; i < 32; i++) {
        ASSERT_SIMD_EQ(mask_lo_8(val, i), _mm_setzero_si128());
    }
}

TEST(Simd256, Mask8) {
    __m256i val = _mm256_set_epi8(
        0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10,
        0x25, 0xAB, 0x99, 0x13, 0x24, 0x00, 0x19, 0x10, 0x99, 0xAB, 0xCC, 0xDD, 0xEE, 0xFF, 0x01, 0x39
    );
    ASSERT_SIMD_EQ(mask_8(val, 0), _mm256_setzero_si256());
    ASSERT_SIMD_EQ(mask_8(val, 1), _mm256_set_epi8(
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39
    ));
    ASSERT_SIMD_EQ(mask_8(val, 2), _mm256_set_epi8(
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x39
    ));
    ASSERT_SIMD_EQ(mask_8(val, 30),  _mm256_set_epi8(
        0x00, 0x00, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10,
        0x25, 0xAB, 0x99, 0x13, 0x24, 0x00, 0x19, 0x10, 0x99, 0xAB, 0xCC, 0xDD, 0xEE, 0xFF, 0x01, 0x39
    ));
    ASSERT_SIMD_EQ(mask_8(val, 31),  _mm256_set_epi8(
        0x00, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10,
        0x25, 0xAB, 0x99, 0x13, 0x24, 0x00, 0x19, 0x10, 0x99, 0xAB, 0xCC, 0xDD, 0xEE, 0xFF, 0x01, 0x39
    ));
    for (size_t i = 32; i < 64; i++) {
        ASSERT_SIMD_EQ(mask_8(val, i), val);
    }
}

TEST(Simd256, MaskLo8) {
    __m256i val = _mm256_set_epi8(
        0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10,
        0x25, 0xAB, 0x99, 0x13, 0x24, 0x00, 0x19, 0x10, 0x99, 0xAB, 0xCC, 0xDD, 0xEE, 0xFF, 0x01, 0x39
    );
    ASSERT_SIMD_EQ(mask_lo_8(val, 0), val);
    ASSERT_SIMD_EQ(mask_lo_8(val, 1), _mm256_set_epi8(
        0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10,
        0x25, 0xAB, 0x99, 0x13, 0x24, 0x00, 0x19, 0x10, 0x99, 0xAB, 0xCC, 0xDD, 0xEE, 0xFF, 0x01, 0x00
    ));
    ASSERT_SIMD_EQ(mask_lo_8(val, 2), _mm256_set_epi8(
        0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10,
        0x25, 0xAB, 0x99, 0x13, 0x24, 0x00, 0x19, 0x10, 0x99, 0xAB, 0xCC, 0xDD, 0xEE, 0xFF, 0x00, 0x00
    ));
    ASSERT_SIMD_EQ(mask_lo_8(val, 30),  _mm256_set_epi8(
        0xFF, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    ));
    ASSERT_SIMD_EQ(mask_lo_8(val, 31),  _mm256_set_epi8(
        0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    ));
    for (size_t i = 32; i < 64; i++) {
        ASSERT_SIMD_EQ(mask_lo_8(val, i), _mm256_setzero_si256());
    }
}

TEST(Simd512, Mask8) {
    __m512i val = _mm512_set_epi8(
        0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10,
        0x25, 0xAB, 0x99, 0x13, 0x24, 0x00, 0x19, 0x10, 0x99, 0xAB, 0xCC, 0xDD, 0xEE, 0xFF, 0x01, 0x39,
        0x12, 0xC9, 0xB3, 0x15, 0x98, 0x97, 0x96, 0x95, 0x94, 0x93, 0x10, 0x13, 0x15, 0x63, 0x58, 0x5A,
        0x2B, 0x12, 0x14, 0x9A, 0x3D, 0x7D, 0x92, 0x15, 0x16, 0x9C, 0x9B, 0x25, 0x22, 0x03, 0x05, 0x32
    );
    ASSERT_SIMD_EQ(mask_8(val, 0), _mm512_setzero_si512());
    ASSERT_SIMD_EQ(mask_8(val, 1), _mm512_set_epi8(
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32
    ));
    ASSERT_SIMD_EQ(mask_8(val, 2), _mm512_set_epi8(
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x32
    ));
    ASSERT_SIMD_EQ(mask_8(val, 62),  _mm512_set_epi8(
        0x00, 0x00, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10,
        0x25, 0xAB, 0x99, 0x13, 0x24, 0x00, 0x19, 0x10, 0x99, 0xAB, 0xCC, 0xDD, 0xEE, 0xFF, 0x01, 0x39,
        0x12, 0xC9, 0xB3, 0x15, 0x98, 0x97, 0x96, 0x95, 0x94, 0x93, 0x10, 0x13, 0x15, 0x63, 0x58, 0x5A,
        0x2B, 0x12, 0x14, 0x9A, 0x3D, 0x7D, 0x92, 0x15, 0x16, 0x9C, 0x9B, 0x25, 0x22, 0x03, 0x05, 0x32
    ));
    ASSERT_SIMD_EQ(mask_8(val, 63),  _mm512_set_epi8(
        0x00, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10,
        0x25, 0xAB, 0x99, 0x13, 0x24, 0x00, 0x19, 0x10, 0x99, 0xAB, 0xCC, 0xDD, 0xEE, 0xFF, 0x01, 0x39,
        0x12, 0xC9, 0xB3, 0x15, 0x98, 0x97, 0x96, 0x95, 0x94, 0x93, 0x10, 0x13, 0x15, 0x63, 0x58, 0x5A,
        0x2B, 0x12, 0x14, 0x9A, 0x3D, 0x7D, 0x92, 0x15, 0x16, 0x9C, 0x9B, 0x25, 0x22, 0x03, 0x05, 0x32
    ));
    for (size_t i = 64; i < 128; i++) {
        ASSERT_SIMD_EQ(mask_8(val, i), val);
    }
}

TEST(Simd512, MaskLo8) {
    __m512i val = _mm512_set_epi8(
        0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10,
        0x25, 0xAB, 0x99, 0x13, 0x24, 0x00, 0x19, 0x10, 0x99, 0xAB, 0xCC, 0xDD, 0xEE, 0xFF, 0x01, 0x39,
        0x12, 0xC9, 0xB3, 0x15, 0x98, 0x97, 0x96, 0x95, 0x94, 0x93, 0x10, 0x13, 0x15, 0x63, 0x58, 0x5A,
        0x2B, 0x12, 0x14, 0x9A, 0x3D, 0x7D, 0x92, 0x15, 0x16, 0x9C, 0x9B, 0x25, 0x22, 0x03, 0x05, 0x32
    );
    ASSERT_SIMD_EQ(mask_lo_8(val, 0), val);
    ASSERT_SIMD_EQ(mask_lo_8(val, 1), _mm512_set_epi8(
        0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10,
        0x25, 0xAB, 0x99, 0x13, 0x24, 0x00, 0x19, 0x10, 0x99, 0xAB, 0xCC, 0xDD, 0xEE, 0xFF, 0x01, 0x39,
        0x12, 0xC9, 0xB3, 0x15, 0x98, 0x97, 0x96, 0x95, 0x94, 0x93, 0x10, 0x13, 0x15, 0x63, 0x58, 0x5A,
        0x2B, 0x12, 0x14, 0x9A, 0x3D, 0x7D, 0x92, 0x15, 0x16, 0x9C, 0x9B, 0x25, 0x22, 0x03, 0x05, 0x00
    ));
    ASSERT_SIMD_EQ(mask_lo_8(val, 2), _mm512_set_epi8(
        0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10,
        0x25, 0xAB, 0x99, 0x13, 0x24, 0x00, 0x19, 0x10, 0x99, 0xAB, 0xCC, 0xDD, 0xEE, 0xFF, 0x01, 0x39,
        0x12, 0xC9, 0xB3, 0x15, 0x98, 0x97, 0x96, 0x95, 0x94, 0x93, 0x10, 0x13, 0x15, 0x63, 0x58, 0x5A,
        0x2B, 0x12, 0x14, 0x9A, 0x3D, 0x7D, 0x92, 0x15, 0x16, 0x9C, 0x9B, 0x25, 0x22, 0x03, 0x00, 0x00
    ));
    ASSERT_SIMD_EQ(mask_lo_8(val, 62),  _mm512_set_epi8(
        0xFF, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    ));
    ASSERT_SIMD_EQ(mask_lo_8(val, 63),  _mm512_set_epi8(
        0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    ));
    for (size_t i = 64; i < 128; i++) {
        ASSERT_SIMD_EQ(mask_lo_8(val, i), _mm512_setzero_si512());
    }
}

TEST(Simd128, Sl8) {
    __m128i val = _mm_set_epi8(0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10);
    ASSERT_SIMD_EQ(sl_8(val, 0),  _mm_set_epi8(0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10));
    ASSERT_SIMD_EQ(sl_8(val, 1),  _mm_set_epi8(0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10, 0x00));
    ASSERT_SIMD_EQ(sl_8(val, 2),  _mm_set_epi8(0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10, 0x00, 0x00));
    ASSERT_SIMD_EQ(sl_8(val, 3),  _mm_set_epi8(0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10, 0x00, 0x00, 0x00));
    ASSERT_SIMD_EQ(sl_8(val, 4),  _mm_set_epi8(0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10, 0x00, 0x00, 0x00, 0x00));
    ASSERT_SIMD_EQ(sl_8(val, 5),  _mm_set_epi8(0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00));
    ASSERT_SIMD_EQ(sl_8(val, 6),  _mm_set_epi8(0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
    ASSERT_SIMD_EQ(sl_8(val, 7),  _mm_set_epi8(0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
    ASSERT_SIMD_EQ(sl_8(val, 8),  _mm_set_epi8(0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
    ASSERT_SIMD_EQ(sl_8(val, 9),  _mm_set_epi8(0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
    ASSERT_SIMD_EQ(sl_8(val, 10), _mm_set_epi8(0x12, 0x06, 0x35, 0x84, 0x81, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
    ASSERT_SIMD_EQ(sl_8(val, 11), _mm_set_epi8(0x06, 0x35, 0x84, 0x81, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
    ASSERT_SIMD_EQ(sl_8(val, 12), _mm_set_epi8(0x35, 0x84, 0x81, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
    ASSERT_SIMD_EQ(sl_8(val, 13), _mm_set_epi8(0x84, 0x81, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
    ASSERT_SIMD_EQ(sl_8(val, 14), _mm_set_epi8(0x81, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
    ASSERT_SIMD_EQ(sl_8(val, 15), _mm_set_epi8(0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00));
    for (size_t i = 16; i < 32; i++) {
        ASSERT_SIMD_EQ(sl_8(val, i), _mm_setzero_si128());
    }
}

TEST(Simd128, Sr8) {
    __m128i val = _mm_set_epi8(0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10);
    ASSERT_SIMD_EQ(sr_8(val, 0),  _mm_set_epi8(0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10));
    ASSERT_SIMD_EQ(sr_8(val, 1),  _mm_set_epi8(0x00, 0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81));
    ASSERT_SIMD_EQ(sr_8(val, 2),  _mm_set_epi8(0x00, 0x00, 0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84));
    ASSERT_SIMD_EQ(sr_8(val, 3),  _mm_set_epi8(0x00, 0x00, 0x00, 0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35));
    ASSERT_SIMD_EQ(sr_8(val, 4),  _mm_set_epi8(0x00, 0x00, 0x00, 0x00, 0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06));
    ASSERT_SIMD_EQ(sr_8(val, 5),  _mm_set_epi8(0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12));
    ASSERT_SIMD_EQ(sr_8(val, 6),  _mm_set_epi8(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE));
    ASSERT_SIMD_EQ(sr_8(val, 7),  _mm_set_epi8(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17));
    ASSERT_SIMD_EQ(sr_8(val, 8),  _mm_set_epi8(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50));
    ASSERT_SIMD_EQ(sr_8(val, 9),  _mm_set_epi8(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32));
    ASSERT_SIMD_EQ(sr_8(val, 10), _mm_set_epi8(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x32, 0x17, 0x32, 0x00, 0x19));
    ASSERT_SIMD_EQ(sr_8(val, 11), _mm_set_epi8(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x32, 0x17, 0x32, 0x00));
    ASSERT_SIMD_EQ(sr_8(val, 12), _mm_set_epi8(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x32, 0x17, 0x32));
    ASSERT_SIMD_EQ(sr_8(val, 13), _mm_set_epi8(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x32, 0x17));
    ASSERT_SIMD_EQ(sr_8(val, 14), _mm_set_epi8(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x32));
    ASSERT_SIMD_EQ(sr_8(val, 15), _mm_set_epi8(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF));
    for (size_t i = 16; i < 32; i++) {
        ASSERT_SIMD_EQ(sr_8(val, i), _mm_setzero_si128());
    }
}

TEST(Simd256, Sl8) {
    __m256i val = _mm256_set_epi8(
        0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10,
        0x25, 0xAB, 0x99, 0x13, 0x24, 0x00, 0x19, 0x10, 0x99, 0xAB, 0xCC, 0xDD, 0xEE, 0xFF, 0x01, 0x39
    );
    ASSERT_SIMD_EQ(sl_8(val, 0), val);
    ASSERT_SIMD_EQ(sl_8(val, 1), _mm256_set_epi8(
        0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10, 0x25,
        0xAB, 0x99, 0x13, 0x24, 0x00, 0x19, 0x10, 0x99, 0xAB, 0xCC, 0xDD, 0xEE, 0xFF, 0x01, 0x39, 0x00
    ));
    ASSERT_SIMD_EQ(sl_8(val, 2), _mm256_set_epi8(
        0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10, 0x25, 0xAB, 
        0x99, 0x13, 0x24, 0x00, 0x19, 0x10, 0x99, 0xAB, 0xCC, 0xDD, 0xEE, 0xFF, 0x01, 0x39, 0x00, 0x00
    ));
    ASSERT_SIMD_EQ(sl_8(val, 30), _mm256_set_epi8(
        0x01, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    ));
    ASSERT_SIMD_EQ(sl_8(val, 31), _mm256_set_epi8(
        0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    ));
    for (size_t i = 32; i < 64; i++) {
        ASSERT_SIMD_EQ(sl_8(val, i), _mm256_setzero_si256());
    }
}

TEST(Simd256, Sr8) {
    __m256i val = _mm256_set_epi8(
        0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10,
        0x25, 0xAB, 0x99, 0x13, 0x24, 0x00, 0x19, 0x10, 0x99, 0xAB, 0xCC, 0xDD, 0xEE, 0xFF, 0x01, 0x39
    );
    ASSERT_SIMD_EQ(sr_8(val, 0), val);
    ASSERT_SIMD_EQ(sr_8(val, 1), _mm256_set_epi8(
        0x00, 0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81,
        0x10, 0x25, 0xAB, 0x99, 0x13, 0x24, 0x00, 0x19, 0x10, 0x99, 0xAB, 0xCC, 0xDD, 0xEE, 0xFF, 0x01
    ));
    ASSERT_SIMD_EQ(sr_8(val, 2), _mm256_set_epi8(
        0x00, 0x00, 0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84,
        0x81, 0x10, 0x25, 0xAB, 0x99, 0x13, 0x24, 0x00, 0x19, 0x10, 0x99, 0xAB, 0xCC, 0xDD, 0xEE, 0xFF
    ));
    ASSERT_SIMD_EQ(sr_8(val, 30), _mm256_set_epi8(
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x32
    ));
    ASSERT_SIMD_EQ(sr_8(val, 31), _mm256_set_epi8(
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF
    ));
    for (size_t i = 32; i < 64; i++) {
        ASSERT_SIMD_EQ(sr_8(val, i), _mm256_setzero_si256());
    }
}

TEST(Simd512, Sl8) {
    __m512i val = _mm512_set_epi8(
        0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10,
        0x25, 0xAB, 0x99, 0x13, 0x24, 0x00, 0x19, 0x10, 0x99, 0xAB, 0xCC, 0xDD, 0xEE, 0xFF, 0x01, 0x39,
        0x12, 0xC9, 0xB3, 0x15, 0x98, 0x97, 0x96, 0x95, 0x94, 0x93, 0x10, 0x13, 0x15, 0x63, 0x58, 0x5A,
        0x2B, 0x12, 0x14, 0x9A, 0x3D, 0x7D, 0x92, 0x15, 0x16, 0x9C, 0x9B, 0x25, 0x22, 0x03, 0x05, 0x32
    );
    ASSERT_SIMD_EQ(sl_8(val, 0), val);
    ASSERT_SIMD_EQ(sl_8(val, 1), _mm512_set_epi8(
        0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10, 0x25, 
        0xAB, 0x99, 0x13, 0x24, 0x00, 0x19, 0x10, 0x99, 0xAB, 0xCC, 0xDD, 0xEE, 0xFF, 0x01, 0x39, 0x12, 
        0xC9, 0xB3, 0x15, 0x98, 0x97, 0x96, 0x95, 0x94, 0x93, 0x10, 0x13, 0x15, 0x63, 0x58, 0x5A, 0x2B, 
        0x12, 0x14, 0x9A, 0x3D, 0x7D, 0x92, 0x15, 0x16, 0x9C, 0x9B, 0x25, 0x22, 0x03, 0x05, 0x32, 0x00
    ));
    ASSERT_SIMD_EQ(sl_8(val, 2), _mm512_set_epi8(
        0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10, 0x25, 0xAB,
        0x99, 0x13, 0x24, 0x00, 0x19, 0x10, 0x99, 0xAB, 0xCC, 0xDD, 0xEE, 0xFF, 0x01, 0x39, 0x12, 0xC9,
        0xB3, 0x15, 0x98, 0x97, 0x96, 0x95, 0x94, 0x93, 0x10, 0x13, 0x15, 0x63, 0x58, 0x5A, 0x2B, 0x12,
        0x14, 0x9A, 0x3D, 0x7D, 0x92, 0x15, 0x16, 0x9C, 0x9B, 0x25, 0x22, 0x03, 0x05, 0x32, 0x00, 0x00
    ));
    ASSERT_SIMD_EQ(sl_8(val, 62), _mm512_set_epi8(
        0x05, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    ));
    ASSERT_SIMD_EQ(sl_8(val, 63), _mm512_set_epi8(
        0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    ));
    for (size_t i = 64; i < 128; i++) {
        ASSERT_SIMD_EQ(sl_8(val, i), _mm512_setzero_si512());
    }
}

TEST(Simd512, Sr8) {
    __m512i val = _mm512_set_epi8(
        0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 0x10,
        0x25, 0xAB, 0x99, 0x13, 0x24, 0x00, 0x19, 0x10, 0x99, 0xAB, 0xCC, 0xDD, 0xEE, 0xFF, 0x01, 0x39,
        0x12, 0xC9, 0xB3, 0x15, 0x98, 0x97, 0x96, 0x95, 0x94, 0x93, 0x10, 0x13, 0x15, 0x63, 0x58, 0x5A,
        0x2B, 0x12, 0x14, 0x9A, 0x3D, 0x7D, 0x92, 0x15, 0x16, 0x9C, 0x9B, 0x25, 0x22, 0x03, 0x05, 0x32
    );
    ASSERT_SIMD_EQ(sr_8(val, 0), val);
    ASSERT_SIMD_EQ(sr_8(val, 1), _mm512_set_epi8(
        0x00, 0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 0x81, 
        0x10, 0x25, 0xAB, 0x99, 0x13, 0x24, 0x00, 0x19, 0x10, 0x99, 0xAB, 0xCC, 0xDD, 0xEE, 0xFF, 0x01, 
        0x39, 0x12, 0xC9, 0xB3, 0x15, 0x98, 0x97, 0x96, 0x95, 0x94, 0x93, 0x10, 0x13, 0x15, 0x63, 0x58, 
        0x5A, 0x2B, 0x12, 0x14, 0x9A, 0x3D, 0x7D, 0x92, 0x15, 0x16, 0x9C, 0x9B, 0x25, 0x22, 0x03, 0x05
    ));
    ASSERT_SIMD_EQ(sr_8(val, 2), _mm512_set_epi8(
        0x00, 0x00, 0xFF, 0x32, 0x17, 0x32, 0x00, 0x19, 0x32, 0x50, 0x17, 0xFE, 0x12, 0x06, 0x35, 0x84, 
        0x81, 0x10, 0x25, 0xAB, 0x99, 0x13, 0x24, 0x00, 0x19, 0x10, 0x99, 0xAB, 0xCC, 0xDD, 0xEE, 0xFF, 
        0x01, 0x39, 0x12, 0xC9, 0xB3, 0x15, 0x98, 0x97, 0x96, 0x95, 0x94, 0x93, 0x10, 0x13, 0x15, 0x63, 
        0x58, 0x5A, 0x2B, 0x12, 0x14, 0x9A, 0x3D, 0x7D, 0x92, 0x15, 0x16, 0x9C, 0x9B, 0x25, 0x22, 0x03
    ));
    ASSERT_SIMD_EQ(sr_8(val, 62), _mm512_set_epi8(
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x32
    ));
    ASSERT_SIMD_EQ(sr_8(val, 63), _mm512_set_epi8(
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF
    ));
    for (size_t i = 64; i < 128; i++) {
        ASSERT_SIMD_EQ(sr_8(val, i), _mm512_setzero_si512());
    }
}
